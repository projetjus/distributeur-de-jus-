voici le code final qui nous permet de faire fonctionner le dstributeur 

onst byte TRIGGER_PIN = 5; // Broche TRIGGER
const byte ECHO_PIN = 4;    // Broche ECHO
 
/* Constantes pour le timeout */
const unsigned long MEASURE_TIMEOUT = 25000UL; // 25ms = ~8m à 340m/s

/* Vitesse du son dans l'air en mm/us */
const float SOUND_SPEED = 340.0 / 1000;

/** Fonction setup() */
//
#define trigPin 5
#define echoPin 4
#include <Servo.h>
Servo servo;
int sound = 250;
void setup() {

 
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);
 pinMode(8,OUTPUT);
servo.attach(4);
          
   
  /* Initialise le port série */
  Serial.begin(115200);
   
  /* Initialise les broches */
  pinMode(TRIGGER_PIN, OUTPUT);
  digitalWrite(TRIGGER_PIN, LOW); // La broche TRIGGER doit être à LOW au repos
  pinMode(ECHO_PIN, INPUT);
}
 
/** Fonction loop() */
void loop() {
  
  
  /* 1. Lance une mesure de distance en envoyant une impulsion HIGH de 10µs sur la broche TRIGGER */
  digitalWrite(TRIGGER_PIN, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIGGER_PIN, LOW);
  
  /* 2. Mesure le temps entre l'envoi de l'impulsion ultrasonique et son écho (si il existe) */
  long measure = pulseIn(ECHO_PIN, HIGH, MEASURE_TIMEOUT);
   
  /* 3. Calcul la distance à partir du temps mesuré */
  float distance_mm = measure / 2.0 * SOUND_SPEED;
   
  /* Affiche les résultats en mm, cm et m */
  Serial.print(F("Distance: "));
//  Serial.print(distance_mm);
//  Serial.print(F("mm ("));
  Serial.print(distance_mm / 10.0, 2);
  Serial.println(F("cm "));
//  Serial.print(distance_mm / 1000.0, 2);
//  Serial.println(F("m)"));
//   
long duration, distance;
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
duration = pulseIn(echoPin, HIGH);
distance = (duration/2) / 29.1;
if (distance_mm < 70) {   // distance inférieure à 7cm = activation 
//  Serial.print(" active 7");
//servo.write(0);// position du servo moteur si il y a activation
//}
//else {
//servo.write(170);// position initiale di servo moteur
//}
//delay(500);
//}

  digitalWrite(8, HIGH);   // turn the LED on (HIGH is the voltage level)
  delay(50);}
  else{
  digitalWrite(8, LOW);    // turn the LED off by making the voltage LOW
  delay(50);                       // wait for a second
  }}
  /* Délai d'attente pour éviter d'afficher trop de résultats à la seconde */
